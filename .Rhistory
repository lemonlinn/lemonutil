tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
tmpdf[,1]
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
tmpdf[1]
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
tmpdf[][1]
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
tmpdf[1,:]
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
tmpdf[1:]
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
tmpdf[1,]
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
tmpdf[1,] <- sapply(tmpdf[1,], fun = sub, "%", "")
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
tmpdf[1,] <- sapply(tmpdf[1,], fun = sub, pattern="%", replacement="")
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
tmpdf[1,] <- sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
tmpdf
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
tmpdf[1,] <- sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
tmpdf
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
tmpdf[1,]
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
tmp <- tmpdf[1,]
View(tmp)
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
View(tmpdf)
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
attributes(tmpdf)
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
attr(tmpdf)
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
attr(tmpdf, 'names')
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
attr(tmpdf, *)
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
attr(tmpdf, *, "names")
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
unname(tmpdf)
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
attr(tmpdf, "names")
tmpdf <- data.frame(uni$body$dataset)
tmpdf <- subset(tmpdf, select = -c(X.))
row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
str(tmpdf)
tmpdf <- data.frame(uni$body$dataset, row.names = c(1,2))
tmpdf <- subset(tmpdf, select = -c(X.))
#row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
str(tmpdf)
tmpdf <- data.frame(uni$body$dataset, row.names = NULL)
tmpdf <- subset(tmpdf, select = -c(X.))
#row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
str(tmpdf)
tmpdf <- data.frame(uni$body$dataset, row.names = c(1,2), stringsAsFactors = FALSE)
tmpdf <- subset(tmpdf, select = -c(X.))
#row.names(tmpdf) <- c(1,2)
names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
str(tmpdf)
#tmpdf <- data.frame(uni$body$dataset, row.names = c(1,2), stringsAsFactors = FALSE)
tmp1 <- uni$body$dataset[1]
tmpdf <- subset(tmpdf, select = -c(X.))
#tmpdf <- data.frame(uni$body$dataset, row.names = c(1,2), stringsAsFactors = FALSE)
tmp1 <- uni$body$dataset[1]
#tmpdf <- subset(tmpdf, select = -c(X.))
#row.names(tmpdf) <- c(1,2)
#names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
#str(tmpdf)
View(tmp1)
#tmpdf <- data.frame(uni$body$dataset, row.names = c(1,2), stringsAsFactors = FALSE)
tmp1 <- uni$body$dataset[1,]
#tmpdf <- subset(tmpdf, select = -c(X.))
#row.names(tmpdf) <- c(1,2)
#names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
#str(tmpdf)
View(tmp1)
#tmpdf <- data.frame(uni$body$dataset, row.names = c(1,2), stringsAsFactors = FALSE)
tmp1 <- uni$body$dataset[1,]
str(tmp1)
#tmpdf <- subset(tmpdf, select = -c(X.))
#row.names(tmpdf) <- c(1,2)
#names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
#str(tmpdf)
#tmpdf <- data.frame(uni$body$dataset, row.names = c(1,2), stringsAsFactors = FALSE)
tmp1 <- uni$body$dataset[1,]
str(tmp1)
rownames(tmp1) <- 1
str(tmp1)
#tmpdf <- subset(tmpdf, select = -c(X.))
#row.names(tmpdf) <- c(1,2)
#names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
#str(tmpdf)
View(tmp1)
#tmpdf <- data.frame(uni$body$dataset, row.names = c(1,2), stringsAsFactors = FALSE)
tmp1 <- c(uni$body$dataset[1,])
str(tmp1)
rownames(tmp1) <- 1
#tmpdf <- data.frame(uni$body$dataset, row.names = c(1,2), stringsAsFactors = FALSE)
tmp1 <- c(uni$body$dataset[1,])
str(tmp1)
#tmpdf <- subset(tmpdf, select = -c(X.))
#row.names(tmpdf) <- c(1,2)
#names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
#str(tmpdf)
View(tmp1)
#tmpdf <- data.frame(uni$body$dataset, row.names = c(1,2), stringsAsFactors = FALSE)
tmp1 <- as.character(c(uni$body$dataset[1,]))
str(tmp1)
#tmpdf <- subset(tmpdf, select = -c(X.))
#row.names(tmpdf) <- c(1,2)
#names(tmpdf) <- uni$header$dataset[2:length(uni$header$dataset)]
#tmpdf[1,] <-
#sub("%","",tmpdf[1,]) #sapply(tmpdf[1,], FUN = sub, pattern="%", replacement="")
#tmpdf[] <- lapply(tmpdf, function(x) { attributes(x) <- NULL; x })
#attributes(tmpdf)
#str(tmpdf)
lemonutil::unitable(d, d$govtsupport_none, namecol = c("Support", "No Support"), title = "govtsupport_none")
lemonutil::unitable(d, d$obstacle_none, namecol = c("Obstacle", "No Obstacle"), title = "obstacle_none")
lemonutil::unitable(d, d$challenge_none, namecol = c("Challenge", "No Challenge"), title = "challenge_none")
lemonutil::unitable(d, d$strat_none, namecol = c("Strategy", "No Strategy"), title = "strat_none")
ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_col()
ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_bar()
#timeopenDF <- data.frame({'M': c(mean())})
#ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_bar()
d$timeopen[d$govtsupport_none == 0,]
#timeopenDF <- data.frame({'M': c(mean())})
#ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_bar()
d$timeopen[c(d$govtsupport_none == 0), ]
#timeopenDF <- data.frame({'M': c(mean())})
#ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_bar()
#d$timeopen[c(d$govtsupport_none == 0), ]
c(d$govtsupport_none == 0)
#timeopenDF <- data.frame({'M': c(mean())})
#ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_bar()
#d$timeopen[c(d$govtsupport_none == 0), ]
d$timeopen
#timeopenDF <- data.frame({'M': c(mean())})
#ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_bar()
#d$timeopen[c(d$govtsupport_none == 0), ]
length(d$timeopen == length(c(d$govtsupport_other == 0)))
#timeopenDF <- data.frame({'M': c(mean())})
#ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_bar()
#d$timeopen[c(d$govtsupport_none == 0), ]
length(d$timeopen) == length(c(d$govtsupport_other == 0))
#timeopenDF <- data.frame({'M': c(mean())})
#ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_bar()
d$timeopen[c(d$govtsupport_none == 0)]
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
#timeopenDF <- data.frame({"Means": c(mean(), mean())})
#ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_bar()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
mean(d$timeopen[c(d$govtsupport_none == 0)])
#timeopenDF <- data.frame({"Means": c(mean(), mean())})
#ggplot(d, aes(x=timeopen, fill=govtsupport_none)) + geom_bar()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)]))
t.test(timeopen~govtsupport_none, d)
t.test(timeopen~challenge_none, d)
t.test(timeopen~obstacle_none, d)
t.test(timeopen~strat_none, d)
timeopenDF <- data.frame({"Means": c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))})
timeopenDF <- data.frame({"Means": c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)]))), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)]))})
timeopenDF <- data.frame({"Means": c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))})
timeopenDF <- data.frame({'Means': c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))})
timeopenDF <- data.frame({'Means': c()})
#timeopenDF <- data.frame({'Means': c()})
ggplot(timeopenDF, aes(x=Means)) + geom_bar()
#timeopenDF <- data.frame({'Means': c()})
#ggplot(timeopenDF, aes(x=Means)) + geom_bar()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)]))
#timeopenDF <- data.frame({'Means': c()})
#ggplot(timeopenDF, aes(x=Means)) + geom_bar()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)]))
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)]))
#timeopenDF <- data.frame({'Means': c()})
#ggplot(timeopenDF, aes(x=Means)) + geom_bar()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame({'Means': c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))})
tmp1 <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame({'Means': tmp1})
tmp1 <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame({'Means' = tmp1})
#ggplot(timeopenDF, aes(x=Means)) + geom_bar()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
tmp1 <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame({'Means' = tmp1})
ggplot(timeopenDF, aes(x=Means)) + geom_bar()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
tmp1 <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame({'Means' = tmp1, 'State': c('Support', 'No Support')})
tmp1 <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame({'Means' = tmp1, 'State'= c('Support', 'No Support')})
tmp1 <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame({'Means' = tmp1 'State' = c('Support', 'No Support')})
tmp1 <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame('Means' = tmp1 'State' = c('Support', 'No Support'))
tmp1 <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame('Means' = tmp1, 'State' = c('Support', 'No Support'))
ggplot(timeopenDF, aes(x=Support, y=Means)) + geom_col()
tmp1 <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])),
mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame('Means' = tmp1, 'State' = c('Support', 'No Support'))
ggplot(timeopenDF, aes(x=State, y=Means)) + geom_col()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
t.test(opcapacity~govtsupport_none, d)
t.test(opcapacity~challenge_none, d)
t.test(opcapacity~obstacle_none, d)
t.test(opcapacity~strat_none, d)
wilcox.test(opcapacity~govtsupport_none, d)
wilcox.test(opcapacity~challenge_none, d)
wilcox.test(opcapacity~obstacle_none, d)
wilcox.test(opcapacity~strat_none, d)
t.test(timeopen~govtsupport_none, d)
t.test(timeopen~challenge_none, d)
t.test(timeopen~obstacle_none, d)
t.test(timeopen~strat_none, d)
wilcox.test(timeopen~govtsupport_none, d)
wilcox.test(timeopen~challenge_none, d)
wilcox.test(timeopen~obstacle_none, d)
wilcox.test(timeopen~strat_none, d)
time_govt <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
time_chal <- c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)])))
time_govt <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
time_govt <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
time_govt <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame('Means' = tmp1, 'State' = c('Support', 'No Support'))
ggplot(timeopenDF, aes(x=State, y=Means)) + geom_col()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
time_chal <- c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)])))
time_strat <- c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)])))
time_govt <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
time_govt <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame('Means' = tmp1, 'State' = c('Support', 'No Support'))
ggplot(timeopenDF, aes(x=State, y=Means)) + geom_col()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
time_chal <- c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)])))
time_strat <- c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)])))
op_govt <- c(mean(na.omit(d$opcapacity[c(d$govtsupport_none == 0)])), mean(na.omit(d$opcapacity[c(d$govtsupport_none == 1)])))
op_govt <- c(mean(na.omit(d$opcapacity[c(d$govtsupport_none == 0)])), mean(na.omit(d$opcapacity[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame('Means' = tmp1, 'State' = c('Support', 'No Support'))
ggplot(timeopenDF, aes(x=State, y=Means)) + geom_col()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
time_chal <- c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)])))
time_strat <- c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)])))
op_chall <- c(mean(na.omit(d$opcapacity[c(d$challenge_none == 0)])), mean(na.omit(d$opcapacity[c(d$challenge_none == 1)])))
op_govt <- c(mean(na.omit(d$opcapacity[c(d$govtsupport_none == 0)])), mean(na.omit(d$opcapacity[c(d$govtsupport_none == 1)])))
timeopenDF <- data.frame('Means' = tmp1, 'State' = c('Support', 'No Support'))
ggplot(timeopenDF, aes(x=State, y=Means)) + geom_col()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)])))
time_chal <- c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)])))
time_strat <- c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)])))
op_chall <- c(mean(na.omit(d$opcapacity[c(d$challenge_none == 0)])), mean(na.omit(d$opcapacity[c(d$challenge_none == 1)])))
op_obs <- c(mean(na.omit(d$opcapacity[c(d$obstacle_none == 0)])), mean(na.omit(d$opcapacity[c(d$obstacle_none == 1)])))
timeopenDF <- data.frame('Means' = tmp1, 'State' = c('Support', 'No Support'))
ggplot(timeopenDF, aes(x=State, y=Means)) + geom_col()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)]))), "State" = c("Govt Support", "No Govt Support"))
time_chal <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Support"))
time_strat <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)]))), "State" = c("Strategy", "No Strategy"))
op_chall <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$challenge_none == 0)])), mean(na.omit(d$opcapacity[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Challenges"))
op_obs <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$obstacle_none == 0)])), mean(na.omit(d$opcapacity[c(d$obstacle_none == 1)]))), "State" = c("Obstacles", "No Obstacles"))
timeopenDF <- data.frame('Means' = tmp1, 'State' = c('Support', 'No Support'))
ggplot(timeopenDF, aes(x=State, y=Means)) + geom_col()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)]))), "State" = c("Govt Support", "No Govt Support"))
time_chal <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Support"))
time_strat <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)]))), "State" = c("Strategy", "No Strategy"))
op_chall <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$challenge_none == 0)])), mean(na.omit(d$opcapacity[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Challenges"))
op_obs <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$obstacle_none == 0)])), mean(na.omit(d$opcapacity[c(d$obstacle_none == 1)]))), "State" = c("Obstacles", "No Obstacles"))
ggplot(time_govt, aes(x=State, y=Means)) + geom_col()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)]))), "State" = c("Govt Support", "No Govt Support"))
time_chal <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Support"))
time_strat <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)]))), "State" = c("Strategy", "No Strategy"))
op_chall <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$challenge_none == 0)])), mean(na.omit(d$opcapacity[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Challenges"))
op_obs <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$obstacle_none == 0)])), mean(na.omit(d$opcapacity[c(d$obstacle_none == 1)]))), "State" = c("Obstacles", "No Obstacles"))
ggplot(time_govt, aes(x=State, y=Means)) + geom_col() + geom_line()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)]))), "State" = c("Govt Support", "No Govt Support"))
time_chal <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Support"))
time_strat <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)]))), "State" = c("Strategy", "No Strategy"))
op_chall <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$challenge_none == 0)])), mean(na.omit(d$opcapacity[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Challenges"))
op_obs <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$obstacle_none == 0)])), mean(na.omit(d$opcapacity[c(d$obstacle_none == 1)]))), "State" = c("Obstacles", "No Obstacles"))
ggplot(time_govt, aes(x=State, y=Means)) + geom_col() + geom_line(aes(x=Means))
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)]))), "State" = c("Govt Support", "No Govt Support"))
time_chal <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Support"))
time_strat <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)]))), "State" = c("Strategy", "No Strategy"))
op_chall <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$challenge_none == 0)])), mean(na.omit(d$opcapacity[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Challenges"))
op_obs <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$obstacle_none == 0)])), mean(na.omit(d$opcapacity[c(d$obstacle_none == 1)]))), "State" = c("Obstacles", "No Obstacles"))
ggplot(time_govt, aes(x=State, y=Means)) + geom_col() + geom_line(aes(y=Means))
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)]))), "State" = c("Govt Support", "No Govt Support"))
time_chal <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Support"))
time_strat <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)]))), "State" = c("Strategy", "No Strategy"))
op_chall <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$challenge_none == 0)])), mean(na.omit(d$opcapacity[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Challenges"))
op_obs <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$obstacle_none == 0)])), mean(na.omit(d$opcapacity[c(d$obstacle_none == 1)]))), "State" = c("Obstacles", "No Obstacles"))
ggplot(time_govt, aes(x=State, y=Means)) + geom_col() + geom_abline()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
time_govt <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$govtsupport_none == 0)])), mean(na.omit(d$timeopen[c(d$govtsupport_none == 1)]))), "State" = c("Govt Support", "No Govt Support"))
time_chal <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$challenge_none == 0)])), mean(na.omit(d$timeopen[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Support"))
time_strat <- data.frame("Means" = c(mean(na.omit(d$timeopen[c(d$strat_none == 0)])), mean(na.omit(d$timeopen[c(d$strat_none == 1)]))), "State" = c("Strategy", "No Strategy"))
op_chall <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$challenge_none == 0)])), mean(na.omit(d$opcapacity[c(d$challenge_none == 1)]))), "State" = c("Challenges", "No Challenges"))
op_obs <- data.frame("Means" = c(mean(na.omit(d$opcapacity[c(d$obstacle_none == 0)])), mean(na.omit(d$opcapacity[c(d$obstacle_none == 1)]))), "State" = c("Obstacles", "No Obstacles"))
ggplot(time_govt, aes(x=State, y=Means)) + geom_point()
#length(d$timeopen) == length(c(d$govtsupport_other == 0))
ggplot(time_govt, aes(x=State, y=Means)) + geom_point() + geom_abline()
ggplot(time_govt, aes(x=State, y=Means)) + geom_point() + geom_line()
ggplot(time_govt, aes(x=State, y=Means)) + geom_point() + geom_path()
ggplot(time_govt, aes(x=State, y=Means)) + geom_point() + geom_line()
ggplot(time_govt, aes(x=State, y=Means)) + geom_point() + geom_abline()
ggplot(time_govt, aes(x=State, y=Means)) + geom_point()
ggplot(time_govt, aes(x=State, y=Means)) + geom_col()
ggplot(time_govt, aes(x=State, y=Means)) + geom_point()
ggplot(time_govt, aes(x=State, y=Means)) + geom_col()
ggplot(d, aes(x=govtsupport_none, y=timeopen)) + geom_boxplot()
ggplot(time_govt, aes(x=State, y=Means)) + geom_point()
ggplot(time_govt, aes(x=State, y=Means)) + geom_col()
ggplot(d, aes(group=govtsupport_none, y=timeopen)) + geom_boxplot()
ggplot(time_govt, aes(x=State, y=Means)) + geom_point()
ggplot(time_govt, aes(x=State, y=Means)) + geom_col()
ggplot(d, aes(group=as.factor(govtsupport_none), y=timeopen)) + geom_boxplot()
ggplot(time_govt, aes(x=State, y=Means)) + geom_point()
ggplot(time_govt, aes(x=State, y=Means)) + geom_col()
ggplot(d, aes(x=as.factor(govtsupport_none), y=timeopen)) + geom_boxplot()
MinMeanSEMMax <- function(x) {
v <- c(min(x), mean(x) - sd(x)/sqrt(length(x)), mean(x), mean(x) + sd(x)/sqrt(length(x)), max(x))
names(v) <- c("ymin", "lower", "middle", "upper", "ymax")
v
}
ggplot(d, aes(factor(govtsupport_none), timeopen)) +
stat_summary(fun.data=MinMeanSEMMax, geom="boxplot") +
ggtitle("Boxplot: Min, Mean-1SEM, Mean, Mean+1SEM, Max")
ggplot(time_govt, aes(x=State, y=Means)) + geom_point()
ggplot(time_govt, aes(x=State, y=Means)) + geom_col()
ggplot(d, aes(x=as.factor(govtsupport_none), y=timeopen)) + geom_boxplot()
lemonutil::unitable(d, d$govtsupport_none, namecol = c("Support", "No Support"), title = "govtsupport_none")
lemonutil::unitable(d, d$obstacle_none, namecol = c("Obstacle", "No Obstacle"), title = "obstacle_none")
lemonutil::unitable(d, d$challenge_none, namecol = c("Challenge", "No Challenge"), title = "challenge_none")
lemonutil::unitable(d, d$strat_none, namecol = c("Strategy", "No Strategy"), title = "strat_none")
MinMeanSEMMax <- function(x) {
v <- c(min(x), mean(x) - sd(x)/sqrt(length(x)), mean(x), mean(x) + sd(x)/sqrt(length(x)), max(x))
names(v) <- c("ymin", "lower", "middle", "upper", "ymax")
v
}
ggplot(d, aes(factor(challenge_none), timeopen)) +
stat_summary(fun.data=MinMeanSEMMax, geom="boxplot") +
ggtitle("Boxplot: Min, Mean-1SEM, Mean, Mean+1SEM, Max")
